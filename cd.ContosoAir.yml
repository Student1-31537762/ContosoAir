# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none
resources:
 pipelines:
  - pipeline: buildContosoAir # identifier for the resource used in pipeline resource variables
    source: Student1-31537762.ContosoAir # name of the pipeline that produces the artifact
    trigger:
     branches:
      include:
       - master

pool:
  vmImage: ubuntu-latest

steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: 'specific'
      project: 'de868385-b619-497e-9cba-886afdee9e34'
      definition: '2'
      buildVersionToDownload: 'latest'
      targetPath: '$(Pipeline.Workspace)'
  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'Azure Connection'
      subscriptionId: '217c0c97-e426-401a-a3ba-ea56a9c0b03f'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(resourcegroup)'
      location: 'West Europe'
      templateLocation: 'Linked artifact'
      csmFile: '$(Pipeline.Workspace)/drop/Templates/azuredeploy.json'
      csmParametersFile: '$(Pipeline.Workspace)/drop/Templates/azuredeploy.parameters.json'
      overrideParameters: '-p_environment $(web_environment) -p_site_prefix $(web_prefix) -p_site_web_name $(web_site)'
      deploymentMode: 'Incremental'
  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'Azure Connection'
      appType: 'webApp'
      WebAppName: '(web_prefix)-$(web_site)-$(web_environment)'
      packageForLinux: '$(Pipeline.Workspace)/**/*.zip'